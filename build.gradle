plugins {
  id 'java'
  id 'io.quarkus'
  id 'com.adarshr.test-logger' version '2.1.0'
  id "com.commercehub.gradle.plugin.avro" version "0.21.0"
}

apply from: 'buildscripts/code-analysis.gradle'

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven {
    url "https://packages.confluent.io/maven/"
  }
}

// Add generated avro sources to main source sets
sourceSets.main.java.srcDirs = ['build/generated-main-avro-java', 'src/main/java']

// Fix: com.datastax.oss:* uses old, mandatory Groovy version
configurations.all {
  resolutionStrategy.force group: 'org.codehaus.groovy', name: 'groovy-json', version: '2.5.7'
  resolutionStrategy.force group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.7'
}

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
  implementation 'io.quarkus:quarkus-resteasy'
  implementation 'io.quarkus:quarkus-resteasy-jackson'
  implementation 'io.quarkus:quarkus-smallrye-openapi'
  implementation 'io.quarkus:quarkus-resteasy-mutiny'

  implementation group: 'org.apache.avro', name: 'avro', version: '1.9.2'

  implementation group: 'io.quarkus', name: 'quarkus-smallrye-reactive-messaging-kafka'



  annotationProcessor group: 'com.datastax.oss', name: 'java-driver-mapper-processor', version: '4.10.0'
  implementation group: 'com.datastax.oss', name: 'java-driver-mapper-runtime', version: '4.10.0'
  implementation 'com.datastax.oss.quarkus:cassandra-quarkus-client'


  implementation 'io.quarkus:quarkus-kafka-streams'
  implementation 'io.quarkus:quarkus-kafka-client'

  implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.5.0'
  implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: '5.5.0'

  testImplementation 'io.quarkus:quarkus-junit5'
  testImplementation "org.mockito:mockito-core:2.+"
  testImplementation 'io.rest-assured:rest-assured'


  // https://stackoverflow.com/questions/59118223/problem-with-eclipse-when-using-java-11-and-cassandra-spring-unit-possibly-along
  testImplementation ('org.cassandraunit:cassandra-unit:4.3.1.0') {
  //  exclude module: 'high-scale-lib'
  }
}

group 'net.explorviz'
version '1.0.0-SNAPSHOT'

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.encoding = 'UTF-8'
}

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

test {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
